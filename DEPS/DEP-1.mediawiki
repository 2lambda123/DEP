<pre>
  DEP: 1
  Title: DEP Purpose and Guidelines
  Author: DNA Team
  Type: Meta
  Status: Active
  Created: 2018-3-29
</pre>

==What is an DEP?==

DEP stands for DNA Enhancement Proposal. An DEP is a design document providing information to the DNA community, or describing a new feature for DNA or its processes or environment. The DEP should provide a concise technical specification of the feature and a rationale for the feature. The DEP author is responsible for building consensus within the community and documenting dissenting opinions.

==DEP Rational==

We intend DEPs to be the primary mechanisms for proposing new features, for collecting community input on an issue, and for documenting the design decisions that have gone into DNA. Because the DEPs are maintained as text files in a versioned repository, their revision history is the historical record of the feature proposal.

For DNA implementers, DEPs are a convenient way to track the progress of their implementation. Ideally each implementation maintainer would list the DEPs that they have implemented. This will give end users a convenient way to know the current status of a given implementation or library.

==DEP Types==

There are three types of DEP:

*A '''Standards Track''' DEP describes any change that affects most or all DNA implementations, such as a change to the network protocol, a change in block or transaction validity rules, proposed application standards/conventions, or any change or addition that affects the interoperability of applications using DNA.

*An '''Informational''' DEP describes a DNA design issue, or provides general guidelines or information to the DNA community, but does not propose a new feature. Informational DEPs do not necessarily represent a DNA community consensus or recommendation, so users and implementors are free to ignore Informational DEPs or follow their advice.

*A '''Meta''' DEP describes a process surrounding DNA or proposes a change to (or an event in) a process. Meta DEPs are like Standards Track DEPs but apply to areas other than the DNA protocol itself. They may propose an implementation, but not to DNA's codebase; they often require community consensus; unlike Informational DEPs, they are more than recommendations, and users are typically not free to ignore them. Examples include procedures, guidelines, changes to the decision-making process, and changes to the tools or environment used in DNA development.

==DEP Work Flow==

The DEP process begins with a new idea for DNA. It is highly recommended that a single DEP cDNAain a single key proposal or new idea. The more focused the DEP, the more successful it tends to be. A change to one client doesn't require an DEP; a change that affects multiple clients, or defines a standard for multiple apps to use, does. The DEP editor reserves the right to reject DEP proposals if they appear too unfocused or too broad. If in doubt, split your DEP into several well-focused ones.

Each DEP must have a champion - someone who writes the DEP using the style and format described below, shepherds the discussions in the appropriate forums, and attempts to build community consensus around the idea.

Vetting an idea publicly before going as far as writing an DEP is meant to save the potential author time. Asking the DNA community first if an idea is original helps prevent too much time being spent on something that is guaranteed to be rejected based on prior discussions (searching the Internet does not always do the trick). It also helps to make sure the idea is applicable to the entire community and not just the author. Just because an idea sounds good to the author does not mean it will work for most people in most areas where DNA is used. Examples of appropriate public forums to gauge interest around your DEP include [https://www.reddit.com/r/DNA the DNA subreddit], [https://github.com/DNAio/DEPs/issues the Issues section of this repository]. In particular, [https://github.com/DNAio/DEPs/issues the Issues section of this repository] is an excellent place to discuss your proposal with the community and start creating more formalized language around your DEP.

Once the champion has asked the DNA community whether an idea has any chance of acceptance a draft DEP should be presented as a pull request. This gives the author a chance to cDNAinuously edit the draft DEP for proper formatting and quality. This also allows for further public comment and the author of the DEP to address concerns about the proposal.

If the DEP collaborators approve, the DEP editor will assign the DEP a number, label it as Standards Track, Informational, or Meta, give it status "Draft", and add it to the git repository. The DEP editor will not unreasonably deny an DEP. Reasons for denying DEP status include duplication of effort, being technically unsound, not providing proper motivation or addressing backwards compatibility, or not in keeping with the DNA philosophy.

Standards Track DEPs consist of three parts, a design document, implementation, and finally if warranted an update to the formal specification. The DEP should be reviewed and accepted along with the implementation. Further more, a standard DEP is targeting to enhance all DNA implementations, an ACCEPTED status of Standard DEP shall also be verified by real project. Standards Track DEPs must include an implementation -- in the form of code, a patch, or a URL to same -- before it can be considered Final.

For an DEP to be accepted it must meet certain minimum criteria. It must be a clear and complete description of the proposed enhancement. The enhancement must represent a net improvement. The proposed implementation, if applicable, must be solid and must not complicate the protocol unduly.

Once an DEP has been accepted, the implementations must be completed. When the implementation is complete and accepted by the community, the status will be changed to "Final".

An DEP can also be assigned status "Deferred". The DEP author or editor can assign the DEP this status when no progress is being made on the DEP. Once an DEP is deferred, the DEP editor can re-assign it to draft status.

An DEP can also be "Rejected". Perhaps after all is said and done it was not a good idea. It is still important to have a record of this fact.

DEPs can also be superseded(replaced) by a different DEP, rendering the original obsolete.

The possible paths of the status of DEPs are as follows:

[[Image:/resource/DEP-1/process.png|DEP Process]]

Some Informational and Meta DEPs may also have a status of "Active" if they are never meant to be completed. E.g. DEP 1 (this DEP).

==What belongs in a successful DEP?==

Each DEP should have the following parts:

*Preamble -- [https://tools.ietf.org/html/rfc822 RFC 822] style headers cDNAaining meta-data about the DEP, including the DEP number, a short descriptive title (limited to a maximum of 44 characters), the names, and optionally the cDNAact info for each author, etc.

*Abstract -- a short (~200 words) description of the technical issue being addressed.

*Motivation (*optional) -- The motivation is critical for DEPs that want to change the DNA protocol. It should clearly explain why the existing protocol specification is inadequate to address the problem that the DEP solves. DEP submissions without sufficient motivation may be rejected outright.

*Specification -- The technical specification should describe the syntax and semantics of any new feature. The specification should be detailed enough to allow competing, interoperable implementations for any of the current DNA platforms.

*Rationale -- The rationale fleshes out the specification by describing what motivated the design and why particular design decisions were made. It should describe alternate designs that were considered and related work, e.g. how the feature is supported in other languages. The rationale may also provide evidence of consensus within the community, and should discuss important objections or concerns raised during discussion.

*Backwards Compatibility -- All DEPs that introduce backwards incompatibilities must include a section describing these incompatibilities and their severity. The DEP must explain how the author proposes to deal with these incompatibilities. DEP submissions without a sufficient backwards compatibility treatise may be rejected outright.

*Test Cases -- Test cases for an implementation are mandatory for DEPs that are affecting consensus changes. Other DEPs can choose to include links to test cases if applicable.

*Implementations -- The implementations must be completed before any DEP is given status "Final", but it need not be completed before the DEP is accepted. It is better to finish the specification and rationale first and reach consensus on it before writing code. Suggest to add the implementation in a git submodule under resource/DEP-X. For code piece inside "big" project, just add link (with revision id) as a reference in DEP.

==DEP Formats and Templates==

DEPs should be written in [https://www.mediawiki.org/wiki/Help:CDNAents mediawiki] or [https://help.github.com/articles/basic-writing-and-formatting-syntax/ markdown] format. Image files should be included in a subdirectory of resource, with a folder of DEP-x.

===DEP Header Preamble===

Each DEP must begin with an [https://tools.ietf.org/html/rfc822 RFC 822] style header preamble. The headers must appear in the following order. Headers marked with "*" are optional and are described below. All other headers are required.

<pre>
  DEP: <DEP number>(this is determined by the DEP editor, reuse issue id in most cases)
  Title: <DEP title>
  Author: <list of authors' real names and optionally, email address>
 *Discussions-To: <email address>
  Status: <Draft | Active | Accepted | Deferred | Rejected | Withdrawn | Final | Replaced>
  Type: <Standard | Informational | Meta>
  Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>
 *Replaces: <DEP numbers>
 *Superseded-By: <DEP number>
 *Resolution: <url>
</pre>

The Author header lists the names, and optionally the email addresses of all the authors/owners of the DEP. The format of the Author header value must be

<pre>
  Random J. User <address@dom.ain>
</pre>

if the email address is included, and just

<pre>
  Random J. User
</pre>

if the email address is not given.

If there are multiple authors, each should be on a separate line following RFC 2822 cDNAinuation line conventions.

Note: The Resolution header is required for Standards Track DEPs only. It cDNAains a URL that should point to an email message or other web resource where the pronouncement about the DEP is made.

While an DEP is in private discussions (usually during the initial Draft phase), a Discussions-To header will indicate the mailing list or URL where the DEP is being discussed. No Discussions-To header is necessary if the DEP is being discussed privately with the author.

The Type header specifies the type of DEP: Standard, Informational, or Meta.

The Created header records the date that the DEP was assigned a number. It should be in yyyy-mm-dd format, e.g. 2001-08-14.

DEPs may have a Requires header, indicating the DEP numbers that this DEP depends on.

DEPs may also have a Superseded-By header indicating that an DEP has been rendered obsolete by a later document; the value is the number of the DEP that replaces the current document. The newer DEP must have a Replaces header cDNAaining the number of the DEP that it rendered obsolete.

===Auxiliary Files===

DEPs may include auxiliary files such as diagrams. Such files must be included in a subdirectory for /resource/DEP-x, where "x" is the DEP number.

==Transferring DEP Ownership==

It occasionally becomes necessary to transfer ownership of DEPs to a new champion. In general, we'd like to retain the original author as a co-author of the transferred DEP, but that's really up to the original author. A good reason to transfer ownership is because the original author no longer has the time or interest in updating it or following through with the DEP process, or has fallen off the face of the 'net (i.e. is unreachable or not responding to email). A bad reason to transfer ownership is because you don't agree with the direction of the DEP. We try to build consensus around an DEP, but if that's not possible, you can always submit a competing DEP.

If you are interested in assuming ownership of an DEP, send a message asking to take over, addressed to both the original author and the DEP editor. If the original author doesn't respond to email in a timely manner, the DEP editor will make a unilateral decision (it's not like such decisions can't be reversed :).

==DEP Editors==

The current DEP editors are

*Ning Hu (@javajoker)
*Edmond (@Honglei-Cong)

==DEP Editor Responsibilities & Workflow==

For each new DEP that comes in, an editor does the following:

*Read the DEP to check if it is ready: sound and complete. The ideas must make technical sense, even if they don't seem likely to be accepted.

*The title should accurately describe the cDNAent.

*Edit the DEP for language (spelling, grammar, sentence structure, etc.), markup (Github flavored Markdown), code style

If the DEP isn't ready, the editor will send it back to the author for revision, with specific instructions.

Once the DEP is ready for the repository, the DEP editor will:

*Assign an DEP number (almost always just the next available number, but sometimes it's a special/joke number, like 666 or 3141) in the pull request comments.

*Merge the pull request when the author is ready (allowing some time for further peer review).

*List the DEP in [[README.mediawiki]]

*Send a message back to the DEP author with next steps.

The DEP editors are intended to fulfill administrative and editorial responsibilities. The DEP editors monitor DEP changes, and correct any structure, grammar, spelling, or markup mistakes we see.

==History==

This document was derived heavily from [https://github.com/bitcoin/bips/blob/master/bip-0001.mediawiki Bitcoin's BIP-0001] written by Amir Taaki which in turn was derived from [https://www.python.org/dev/peps/pep-0001/ Python's PEP-0001]. In many places text was simply copied and modified. Although the PEP-0001 text was written by Barry Warsaw, Jeremy Hylton, and David Goodger, they are not responsible for its use in the DNA improvement process, and should not be bothered with technical questions specific to DNA or the DEP process. Please direct all comments to the DEP editors.
